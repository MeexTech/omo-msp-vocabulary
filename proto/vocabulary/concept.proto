syntax = "proto3";

package omo.msp.vocabulary;
option go_package= "proto/vocabulary";
import "proto/vocabulary/common.proto";

service ConceptService {
    rpc AddOne(ReqConceptAdd) returns (ReplyConceptInfo) {}
    rpc GetOne(RequestInfo) returns (ReplyConceptInfo) {}
    rpc RemoveOne(RequestInfo) returns (ReplyInfo) {}
    rpc GetAll(RequestInfo) returns (ReplyConceptList) {}
    rpc Update(ReqConceptUpdate) returns (ReplyConceptInfo){}
    rpc AppendAttribute(ReqConceptAttribute) returns (ReplyConceptAttribute) {}
    rpc RemoveAttribute(ReqConceptAttribute) returns (ReplyConceptAttribute) {}
}

enum ConceptType {
    Unknown = 0;
    Personal = 1;
    Utensil = 2; // 器物
    Event = 3; //事件
    Organize = 4; // 组织
    Idea = 5; //思想理论
    Book = 6; //经籍著作
    Culture = 7; //文化
    Faction = 8; //派别
    Nature = 9; //自然
    Honor = 10; //荣誉奖项
}

message ConceptInfo {
    ConceptType type = 1;
    string name = 2;
    string uid = 3;
    string cover = 4;
    string remark = 5;
    string table = 6;
    int64 time = 7;
    int64 updated = 8;
    int64 created = 9;
    string creator = 10;
    string operator = 11;
    string parent = 12;
    repeated string attributes = 13;
    repeated ConceptInfo children = 14;
}

message ReqConceptAdd {
    ConceptType type = 1;
    string name = 2;
    string cover = 4;
    string remark = 5;
    string table = 6;
    string parent = 7;
    string operator = 8;
}

message ReqConceptUpdate {
    string uid = 1;
    ConceptType type = 2;
    string name = 3;
    string cover = 4;
    string remark = 5;
    string operator = 6;
}

message ReplyConceptInfo {
    ConceptInfo info = 1;
    ResultStatus errorCode = 2;
    string errorMsg = 3;
}

message ReplyConceptList {
    string flag = 1;
    repeated ConceptInfo list = 2;
}

message ReqConceptAttribute {
    string uid = 1;
    string concept = 2;
    string operator = 3;
}

message ReplyConceptAttribute {
    string uid = 1;
    string concept = 2;
    ResultStatus errorCode = 3;
}
