// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.11.2
// source: proto/vocabulary/graph.proto

package vocabulary

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cover  string   `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Entity string   `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	Labels []string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_graph_proto_rawDescGZIP(), []int{0}
}

func (x *NodeInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *NodeInfo) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *NodeInfo) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type LinkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Relation  string        `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`
	Direction DirectionType `protobuf:"varint,4,opt,name=direction,proto3,enum=omo.msp.vocabulary.DirectionType" json:"direction,omitempty"`
	From      string        `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	To        string        `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *LinkInfo) Reset() {
	*x = LinkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkInfo) ProtoMessage() {}

func (x *LinkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkInfo.ProtoReflect.Descriptor instead.
func (*LinkInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_graph_proto_rawDescGZIP(), []int{1}
}

func (x *LinkInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LinkInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LinkInfo) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *LinkInfo) GetDirection() DirectionType {
	if x != nil {
		return x.Direction
	}
	return DirectionType_Double
}

func (x *LinkInfo) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *LinkInfo) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type GraphInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Center string      `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	Nodes  []*NodeInfo `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Links  []*LinkInfo `protobuf:"bytes,3,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *GraphInfo) Reset() {
	*x = GraphInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphInfo) ProtoMessage() {}

func (x *GraphInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphInfo.ProtoReflect.Descriptor instead.
func (*GraphInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_graph_proto_rawDescGZIP(), []int{2}
}

func (x *GraphInfo) GetCenter() string {
	if x != nil {
		return x.Center
	}
	return ""
}

func (x *GraphInfo) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GraphInfo) GetLinks() []*LinkInfo {
	if x != nil {
		return x.Links
	}
	return nil
}

type ReqNodeAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Entity string `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	Label  string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Cover  string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *ReqNodeAdd) Reset() {
	*x = ReqNodeAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_graph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqNodeAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqNodeAdd) ProtoMessage() {}

func (x *ReqNodeAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_graph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqNodeAdd.ProtoReflect.Descriptor instead.
func (*ReqNodeAdd) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_graph_proto_rawDescGZIP(), []int{3}
}

func (x *ReqNodeAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqNodeAdd) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *ReqNodeAdd) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ReqNodeAdd) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

type ReplyNodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *NodeInfo    `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Status *ReplyStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyNodeInfo) Reset() {
	*x = ReplyNodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_graph_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyNodeInfo) ProtoMessage() {}

func (x *ReplyNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_graph_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyNodeInfo.ProtoReflect.Descriptor instead.
func (*ReplyNodeInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_graph_proto_rawDescGZIP(), []int{4}
}

func (x *ReplyNodeInfo) GetInfo() *NodeInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReplyNodeInfo) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReqLinkAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Direction DirectionType `protobuf:"varint,2,opt,name=direction,proto3,enum=omo.msp.vocabulary.DirectionType" json:"direction,omitempty"`
	Key       string        `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	From      string        `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To        string        `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	Relation  string        `protobuf:"bytes,6,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *ReqLinkAdd) Reset() {
	*x = ReqLinkAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_graph_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLinkAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLinkAdd) ProtoMessage() {}

func (x *ReqLinkAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_graph_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLinkAdd.ProtoReflect.Descriptor instead.
func (*ReqLinkAdd) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_graph_proto_rawDescGZIP(), []int{5}
}

func (x *ReqLinkAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqLinkAdd) GetDirection() DirectionType {
	if x != nil {
		return x.Direction
	}
	return DirectionType_Double
}

func (x *ReqLinkAdd) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReqLinkAdd) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReqLinkAdd) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ReqLinkAdd) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

type ReplyLinkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *LinkInfo    `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Status *ReplyStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyLinkInfo) Reset() {
	*x = ReplyLinkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_graph_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyLinkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyLinkInfo) ProtoMessage() {}

func (x *ReplyLinkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_graph_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyLinkInfo.ProtoReflect.Descriptor instead.
func (*ReplyLinkInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_graph_proto_rawDescGZIP(), []int{6}
}

func (x *ReplyLinkInfo) GetInfo() *LinkInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReplyLinkInfo) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReqGraphPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ReqGraphPath) Reset() {
	*x = ReqGraphPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_graph_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGraphPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGraphPath) ProtoMessage() {}

func (x *ReqGraphPath) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_graph_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGraphPath.ProtoReflect.Descriptor instead.
func (*ReqGraphPath) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_graph_proto_rawDescGZIP(), []int{7}
}

func (x *ReqGraphPath) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReqGraphPath) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type ReplyGraphInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph  *GraphInfo   `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Status *ReplyStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyGraphInfo) Reset() {
	*x = ReplyGraphInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_graph_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGraphInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGraphInfo) ProtoMessage() {}

func (x *ReplyGraphInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_graph_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGraphInfo.ProtoReflect.Descriptor instead.
func (*ReplyGraphInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_graph_proto_rawDescGZIP(), []int{8}
}

func (x *ReplyGraphInfo) GetGraph() *GraphInfo {
	if x != nil {
		return x.Graph
	}
	return nil
}

func (x *ReplyGraphInfo) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_proto_vocabulary_graph_proto protoreflect.FileDescriptor

var file_proto_vocabulary_graph_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x74, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x09, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x32, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x64, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x64, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x7a, 0x0a,
	0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f,
	0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x0a, 0x52, 0x65,
	0x71, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x64, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x7a, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x32, 0x0a, 0x0c, 0x52,
	0x65, 0x71, 0x47, 0x72, 0x61, 0x70, 0x68, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22,
	0x7e, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x72, 0x61, 0x70, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x33, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32,
	0xec, 0x05, 0x0a, 0x0c, 0x47, 0x72, 0x61, 0x70, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x71, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x1a, 0x21, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x64, 0x64, 0x1a, 0x21, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x21, 0x2e, 0x6f,
	0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x6f,
	0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x21, 0x2e,
	0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x22, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x20, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x50, 0x61, 0x74, 0x68, 0x1a, 0x22, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x09, 0x46, 0x69,
	0x6e, 0x64, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x22, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x47, 0x72, 0x61, 0x70, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x42, 0x12,
	0x5a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_vocabulary_graph_proto_rawDescOnce sync.Once
	file_proto_vocabulary_graph_proto_rawDescData = file_proto_vocabulary_graph_proto_rawDesc
)

func file_proto_vocabulary_graph_proto_rawDescGZIP() []byte {
	file_proto_vocabulary_graph_proto_rawDescOnce.Do(func() {
		file_proto_vocabulary_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_vocabulary_graph_proto_rawDescData)
	})
	return file_proto_vocabulary_graph_proto_rawDescData
}

var file_proto_vocabulary_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_vocabulary_graph_proto_goTypes = []interface{}{
	(*NodeInfo)(nil),       // 0: omo.msp.vocabulary.NodeInfo
	(*LinkInfo)(nil),       // 1: omo.msp.vocabulary.LinkInfo
	(*GraphInfo)(nil),      // 2: omo.msp.vocabulary.GraphInfo
	(*ReqNodeAdd)(nil),     // 3: omo.msp.vocabulary.ReqNodeAdd
	(*ReplyNodeInfo)(nil),  // 4: omo.msp.vocabulary.ReplyNodeInfo
	(*ReqLinkAdd)(nil),     // 5: omo.msp.vocabulary.ReqLinkAdd
	(*ReplyLinkInfo)(nil),  // 6: omo.msp.vocabulary.ReplyLinkInfo
	(*ReqGraphPath)(nil),   // 7: omo.msp.vocabulary.ReqGraphPath
	(*ReplyGraphInfo)(nil), // 8: omo.msp.vocabulary.ReplyGraphInfo
	(DirectionType)(0),     // 9: omo.msp.vocabulary.DirectionType
	(*ReplyStatus)(nil),    // 10: omo.msp.vocabulary.ReplyStatus
	(*RequestInfo)(nil),    // 11: omo.msp.vocabulary.RequestInfo
	(*ReplyInfo)(nil),      // 12: omo.msp.vocabulary.ReplyInfo
}
var file_proto_vocabulary_graph_proto_depIdxs = []int32{
	9,  // 0: omo.msp.vocabulary.LinkInfo.direction:type_name -> omo.msp.vocabulary.DirectionType
	0,  // 1: omo.msp.vocabulary.GraphInfo.nodes:type_name -> omo.msp.vocabulary.NodeInfo
	1,  // 2: omo.msp.vocabulary.GraphInfo.links:type_name -> omo.msp.vocabulary.LinkInfo
	0,  // 3: omo.msp.vocabulary.ReplyNodeInfo.info:type_name -> omo.msp.vocabulary.NodeInfo
	10, // 4: omo.msp.vocabulary.ReplyNodeInfo.status:type_name -> omo.msp.vocabulary.ReplyStatus
	9,  // 5: omo.msp.vocabulary.ReqLinkAdd.direction:type_name -> omo.msp.vocabulary.DirectionType
	1,  // 6: omo.msp.vocabulary.ReplyLinkInfo.info:type_name -> omo.msp.vocabulary.LinkInfo
	10, // 7: omo.msp.vocabulary.ReplyLinkInfo.status:type_name -> omo.msp.vocabulary.ReplyStatus
	2,  // 8: omo.msp.vocabulary.ReplyGraphInfo.graph:type_name -> omo.msp.vocabulary.GraphInfo
	10, // 9: omo.msp.vocabulary.ReplyGraphInfo.status:type_name -> omo.msp.vocabulary.ReplyStatus
	3,  // 10: omo.msp.vocabulary.GraphService.AddNode:input_type -> omo.msp.vocabulary.ReqNodeAdd
	5,  // 11: omo.msp.vocabulary.GraphService.AddLink:input_type -> omo.msp.vocabulary.ReqLinkAdd
	11, // 12: omo.msp.vocabulary.GraphService.RemoveNode:input_type -> omo.msp.vocabulary.RequestInfo
	11, // 13: omo.msp.vocabulary.GraphService.RemoveLink:input_type -> omo.msp.vocabulary.RequestInfo
	11, // 14: omo.msp.vocabulary.GraphService.GetNode:input_type -> omo.msp.vocabulary.RequestInfo
	11, // 15: omo.msp.vocabulary.GraphService.GetLink:input_type -> omo.msp.vocabulary.RequestInfo
	11, // 16: omo.msp.vocabulary.GraphService.FindNodes:input_type -> omo.msp.vocabulary.RequestInfo
	7,  // 17: omo.msp.vocabulary.GraphService.FindPath:input_type -> omo.msp.vocabulary.ReqGraphPath
	11, // 18: omo.msp.vocabulary.GraphService.FindGraph:input_type -> omo.msp.vocabulary.RequestInfo
	4,  // 19: omo.msp.vocabulary.GraphService.AddNode:output_type -> omo.msp.vocabulary.ReplyNodeInfo
	6,  // 20: omo.msp.vocabulary.GraphService.AddLink:output_type -> omo.msp.vocabulary.ReplyLinkInfo
	12, // 21: omo.msp.vocabulary.GraphService.RemoveNode:output_type -> omo.msp.vocabulary.ReplyInfo
	12, // 22: omo.msp.vocabulary.GraphService.RemoveLink:output_type -> omo.msp.vocabulary.ReplyInfo
	4,  // 23: omo.msp.vocabulary.GraphService.GetNode:output_type -> omo.msp.vocabulary.ReplyNodeInfo
	6,  // 24: omo.msp.vocabulary.GraphService.GetLink:output_type -> omo.msp.vocabulary.ReplyLinkInfo
	8,  // 25: omo.msp.vocabulary.GraphService.FindNodes:output_type -> omo.msp.vocabulary.ReplyGraphInfo
	8,  // 26: omo.msp.vocabulary.GraphService.FindPath:output_type -> omo.msp.vocabulary.ReplyGraphInfo
	8,  // 27: omo.msp.vocabulary.GraphService.FindGraph:output_type -> omo.msp.vocabulary.ReplyGraphInfo
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_vocabulary_graph_proto_init() }
func file_proto_vocabulary_graph_proto_init() {
	if File_proto_vocabulary_graph_proto != nil {
		return
	}
	file_proto_vocabulary_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_vocabulary_graph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_graph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_graph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_graph_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqNodeAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_graph_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyNodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_graph_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLinkAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_graph_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyLinkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_graph_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGraphPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_graph_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGraphInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_vocabulary_graph_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vocabulary_graph_proto_goTypes,
		DependencyIndexes: file_proto_vocabulary_graph_proto_depIdxs,
		MessageInfos:      file_proto_vocabulary_graph_proto_msgTypes,
	}.Build()
	File_proto_vocabulary_graph_proto = out.File
	file_proto_vocabulary_graph_proto_rawDesc = nil
	file_proto_vocabulary_graph_proto_goTypes = nil
	file_proto_vocabulary_graph_proto_depIdxs = nil
}
