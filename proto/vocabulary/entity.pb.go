// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.11.2
// source: proto/vocabulary/entity.proto

package vocabulary

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EntityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name        string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner       string          `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Cover       string          `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Concept     string          `protobuf:"bytes,5,opt,name=concept,proto3" json:"concept,omitempty"`
	Description string          `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Add         string          `protobuf:"bytes,7,opt,name=add,proto3" json:"add,omitempty"`
	Time        int64           `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
	Updated     int64           `protobuf:"varint,9,opt,name=updated,proto3" json:"updated,omitempty"`
	Created     int64           `protobuf:"varint,10,opt,name=created,proto3" json:"created,omitempty"`
	Creator     string          `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	Operator    string          `protobuf:"bytes,12,opt,name=operator,proto3" json:"operator,omitempty"`
	Status      uint32          `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	Synonyms    []string        `protobuf:"bytes,14,rep,name=synonyms,proto3" json:"synonyms,omitempty"`
	Tags        []string        `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	Properties  []*PropertyInfo `protobuf:"bytes,16,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *EntityInfo) Reset() {
	*x = EntityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityInfo) ProtoMessage() {}

func (x *EntityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityInfo.ProtoReflect.Descriptor instead.
func (*EntityInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{0}
}

func (x *EntityInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *EntityInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *EntityInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *EntityInfo) GetConcept() string {
	if x != nil {
		return x.Concept
	}
	return ""
}

func (x *EntityInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EntityInfo) GetAdd() string {
	if x != nil {
		return x.Add
	}
	return ""
}

func (x *EntityInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *EntityInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *EntityInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *EntityInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *EntityInfo) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *EntityInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *EntityInfo) GetSynonyms() []string {
	if x != nil {
		return x.Synonyms
	}
	return nil
}

func (x *EntityInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EntityInfo) GetProperties() []*PropertyInfo {
	if x != nil {
		return x.Properties
	}
	return nil
}

type PropertyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string      `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Words []*WordInfo `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *PropertyInfo) Reset() {
	*x = PropertyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyInfo) ProtoMessage() {}

func (x *PropertyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyInfo.ProtoReflect.Descriptor instead.
func (*PropertyInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{1}
}

func (x *PropertyInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PropertyInfo) GetWords() []*WordInfo {
	if x != nil {
		return x.Words
	}
	return nil
}

type WordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WordInfo) Reset() {
	*x = WordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordInfo) ProtoMessage() {}

func (x *WordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordInfo.ProtoReflect.Descriptor instead.
func (*WordInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{2}
}

func (x *WordInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *WordInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ReqEntityAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner       string   `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Cover       string   `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Concept     string   `protobuf:"bytes,5,opt,name=concept,proto3" json:"concept,omitempty"`
	Description string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Add         string   `protobuf:"bytes,7,opt,name=add,proto3" json:"add,omitempty"`
	Synonyms    []string `protobuf:"bytes,8,rep,name=synonyms,proto3" json:"synonyms,omitempty"`
	Tags        []string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ReqEntityAdd) Reset() {
	*x = ReqEntityAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEntityAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEntityAdd) ProtoMessage() {}

func (x *ReqEntityAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEntityAdd.ProtoReflect.Descriptor instead.
func (*ReqEntityAdd) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{3}
}

func (x *ReqEntityAdd) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ReqEntityAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqEntityAdd) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ReqEntityAdd) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqEntityAdd) GetConcept() string {
	if x != nil {
		return x.Concept
	}
	return ""
}

func (x *ReqEntityAdd) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReqEntityAdd) GetAdd() string {
	if x != nil {
		return x.Add
	}
	return ""
}

func (x *ReqEntityAdd) GetSynonyms() []string {
	if x != nil {
		return x.Synonyms
	}
	return nil
}

func (x *ReqEntityAdd) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ReqEntityBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status uint32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Owner  string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Page   int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ReqEntityBy) Reset() {
	*x = ReqEntityBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEntityBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEntityBy) ProtoMessage() {}

func (x *ReqEntityBy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEntityBy.ProtoReflect.Descriptor instead.
func (*ReqEntityBy) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{4}
}

func (x *ReqEntityBy) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReqEntityBy) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ReqEntityBy) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ReqEntityBy) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ReplyEntityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *EntityInfo  `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Status *ReplyStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyEntityInfo) Reset() {
	*x = ReplyEntityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyEntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyEntityInfo) ProtoMessage() {}

func (x *ReplyEntityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyEntityInfo.ProtoReflect.Descriptor instead.
func (*ReplyEntityInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{5}
}

func (x *ReplyEntityInfo) GetInfo() *EntityInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReplyEntityInfo) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReplyEntityAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag   string        `protobuf:"bytes,1,opt,name=flag,proto3" json:"flag,omitempty"`
	List   []*EntityInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Status *ReplyStatus  `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyEntityAll) Reset() {
	*x = ReplyEntityAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyEntityAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyEntityAll) ProtoMessage() {}

func (x *ReplyEntityAll) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyEntityAll.ProtoReflect.Descriptor instead.
func (*ReplyEntityAll) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{6}
}

func (x *ReplyEntityAll) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *ReplyEntityAll) GetList() []*EntityInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ReplyEntityAll) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReqEntityProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Property *PropertyInfo `protobuf:"bytes,2,opt,name=property,proto3" json:"property,omitempty"`
}

func (x *ReqEntityProperty) Reset() {
	*x = ReqEntityProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEntityProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEntityProperty) ProtoMessage() {}

func (x *ReqEntityProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEntityProperty.ProtoReflect.Descriptor instead.
func (*ReqEntityProperty) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{7}
}

func (x *ReqEntityProperty) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReqEntityProperty) GetProperty() *PropertyInfo {
	if x != nil {
		return x.Property
	}
	return nil
}

type ReqEntityProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Properties []*PropertyInfo `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *ReqEntityProperties) Reset() {
	*x = ReqEntityProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEntityProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEntityProperties) ProtoMessage() {}

func (x *ReqEntityProperties) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEntityProperties.ProtoReflect.Descriptor instead.
func (*ReqEntityProperties) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{8}
}

func (x *ReqEntityProperties) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReqEntityProperties) GetProperties() []*PropertyInfo {
	if x != nil {
		return x.Properties
	}
	return nil
}

type ReplyEntityProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Properties []*PropertyInfo `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	Status     *ReplyStatus    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyEntityProperties) Reset() {
	*x = ReplyEntityProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyEntityProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyEntityProperties) ProtoMessage() {}

func (x *ReplyEntityProperties) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyEntityProperties.ProtoReflect.Descriptor instead.
func (*ReplyEntityProperties) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{9}
}

func (x *ReplyEntityProperties) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReplyEntityProperties) GetProperties() []*PropertyInfo {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ReplyEntityProperties) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReqEntityBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc     string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Add      string `protobuf:"bytes,4,opt,name=add,proto3" json:"add,omitempty"`
	Concept  string `protobuf:"bytes,5,opt,name=concept,proto3" json:"concept,omitempty"`
	Cover    string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	Operator string `protobuf:"bytes,7,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *ReqEntityBase) Reset() {
	*x = ReqEntityBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEntityBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEntityBase) ProtoMessage() {}

func (x *ReqEntityBase) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEntityBase.ProtoReflect.Descriptor instead.
func (*ReqEntityBase) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{10}
}

func (x *ReqEntityBase) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReqEntityBase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqEntityBase) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ReqEntityBase) GetAdd() string {
	if x != nil {
		return x.Add
	}
	return ""
}

func (x *ReqEntityBase) GetConcept() string {
	if x != nil {
		return x.Concept
	}
	return ""
}

func (x *ReqEntityBase) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqEntityBase) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type ReqEntityStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Operator string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Status   uint32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReqEntityStatus) Reset() {
	*x = ReqEntityStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEntityStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEntityStatus) ProtoMessage() {}

func (x *ReqEntityStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEntityStatus.ProtoReflect.Descriptor instead.
func (*ReqEntityStatus) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{11}
}

func (x *ReqEntityStatus) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReqEntityStatus) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *ReqEntityStatus) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReplyEntityStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string       `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	State  uint32       `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Status *ReplyStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyEntityStatus) Reset() {
	*x = ReplyEntityStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyEntityStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyEntityStatus) ProtoMessage() {}

func (x *ReplyEntityStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyEntityStatus.ProtoReflect.Descriptor instead.
func (*ReplyEntityStatus) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{12}
}

func (x *ReplyEntityStatus) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReplyEntityStatus) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ReplyEntityStatus) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReplyEntityUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string       `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	List   []string     `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Status *ReplyStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyEntityUpdate) Reset() {
	*x = ReplyEntityUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_entity_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyEntityUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyEntityUpdate) ProtoMessage() {}

func (x *ReplyEntityUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_entity_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyEntityUpdate.ProtoReflect.Descriptor instead.
func (*ReplyEntityUpdate) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_entity_proto_rawDescGZIP(), []int{13}
}

func (x *ReplyEntityUpdate) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReplyEntityUpdate) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ReplyEntityUpdate) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_proto_vocabulary_entity_proto protoreflect.FileDescriptor

var file_proto_vocabulary_entity_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb4, 0x03, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x64,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x6e,
	0x79, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x6e,
	0x79, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6d, 0x6f,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e,
	0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22,
	0x30, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41,
	0x64, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x67, 0x0a, 0x0b, 0x52, 0x65,
	0x71, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x41, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x63, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x3c,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x69, 0x0a, 0x13,
	0x52, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa7,
	0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x57, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x74, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x37,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x72, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xc6, 0x08, 0x0a, 0x0d,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a,
	0x06, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x20, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x64, 0x64, 0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x23, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x1a, 0x22, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x6f,
	0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x61, 0x73, 0x65, 0x1a,
	0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x25, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x56,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x6f,
	0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x12, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x00, 0x12, 0x64, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1f, 0x2e, 0x6f,
	0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x29, 0x2e,
	0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x29, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f,
	0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_vocabulary_entity_proto_rawDescOnce sync.Once
	file_proto_vocabulary_entity_proto_rawDescData = file_proto_vocabulary_entity_proto_rawDesc
)

func file_proto_vocabulary_entity_proto_rawDescGZIP() []byte {
	file_proto_vocabulary_entity_proto_rawDescOnce.Do(func() {
		file_proto_vocabulary_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_vocabulary_entity_proto_rawDescData)
	})
	return file_proto_vocabulary_entity_proto_rawDescData
}

var file_proto_vocabulary_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_vocabulary_entity_proto_goTypes = []interface{}{
	(*EntityInfo)(nil),            // 0: omo.msp.vocabulary.EntityInfo
	(*PropertyInfo)(nil),          // 1: omo.msp.vocabulary.PropertyInfo
	(*WordInfo)(nil),              // 2: omo.msp.vocabulary.WordInfo
	(*ReqEntityAdd)(nil),          // 3: omo.msp.vocabulary.ReqEntityAdd
	(*ReqEntityBy)(nil),           // 4: omo.msp.vocabulary.ReqEntityBy
	(*ReplyEntityInfo)(nil),       // 5: omo.msp.vocabulary.ReplyEntityInfo
	(*ReplyEntityAll)(nil),        // 6: omo.msp.vocabulary.ReplyEntityAll
	(*ReqEntityProperty)(nil),     // 7: omo.msp.vocabulary.ReqEntityProperty
	(*ReqEntityProperties)(nil),   // 8: omo.msp.vocabulary.ReqEntityProperties
	(*ReplyEntityProperties)(nil), // 9: omo.msp.vocabulary.ReplyEntityProperties
	(*ReqEntityBase)(nil),         // 10: omo.msp.vocabulary.ReqEntityBase
	(*ReqEntityStatus)(nil),       // 11: omo.msp.vocabulary.ReqEntityStatus
	(*ReplyEntityStatus)(nil),     // 12: omo.msp.vocabulary.ReplyEntityStatus
	(*ReplyEntityUpdate)(nil),     // 13: omo.msp.vocabulary.ReplyEntityUpdate
	(*ReplyStatus)(nil),           // 14: omo.msp.vocabulary.ReplyStatus
	(*RequestInfo)(nil),           // 15: omo.msp.vocabulary.RequestInfo
	(*RequestList)(nil),           // 16: omo.msp.vocabulary.RequestList
	(*ReplyInfo)(nil),             // 17: omo.msp.vocabulary.ReplyInfo
}
var file_proto_vocabulary_entity_proto_depIdxs = []int32{
	1,  // 0: omo.msp.vocabulary.EntityInfo.properties:type_name -> omo.msp.vocabulary.PropertyInfo
	2,  // 1: omo.msp.vocabulary.PropertyInfo.words:type_name -> omo.msp.vocabulary.WordInfo
	0,  // 2: omo.msp.vocabulary.ReplyEntityInfo.info:type_name -> omo.msp.vocabulary.EntityInfo
	14, // 3: omo.msp.vocabulary.ReplyEntityInfo.status:type_name -> omo.msp.vocabulary.ReplyStatus
	0,  // 4: omo.msp.vocabulary.ReplyEntityAll.list:type_name -> omo.msp.vocabulary.EntityInfo
	14, // 5: omo.msp.vocabulary.ReplyEntityAll.status:type_name -> omo.msp.vocabulary.ReplyStatus
	1,  // 6: omo.msp.vocabulary.ReqEntityProperty.property:type_name -> omo.msp.vocabulary.PropertyInfo
	1,  // 7: omo.msp.vocabulary.ReqEntityProperties.properties:type_name -> omo.msp.vocabulary.PropertyInfo
	1,  // 8: omo.msp.vocabulary.ReplyEntityProperties.properties:type_name -> omo.msp.vocabulary.PropertyInfo
	14, // 9: omo.msp.vocabulary.ReplyEntityProperties.status:type_name -> omo.msp.vocabulary.ReplyStatus
	14, // 10: omo.msp.vocabulary.ReplyEntityStatus.status:type_name -> omo.msp.vocabulary.ReplyStatus
	14, // 11: omo.msp.vocabulary.ReplyEntityUpdate.status:type_name -> omo.msp.vocabulary.ReplyStatus
	3,  // 12: omo.msp.vocabulary.EntityService.AddOne:input_type -> omo.msp.vocabulary.ReqEntityAdd
	15, // 13: omo.msp.vocabulary.EntityService.GetOne:input_type -> omo.msp.vocabulary.RequestInfo
	15, // 14: omo.msp.vocabulary.EntityService.GetByName:input_type -> omo.msp.vocabulary.RequestInfo
	15, // 15: omo.msp.vocabulary.EntityService.RemoveOne:input_type -> omo.msp.vocabulary.RequestInfo
	4,  // 16: omo.msp.vocabulary.EntityService.GetAllByOwner:input_type -> omo.msp.vocabulary.ReqEntityBy
	10, // 17: omo.msp.vocabulary.EntityService.UpdateBase:input_type -> omo.msp.vocabulary.ReqEntityBase
	11, // 18: omo.msp.vocabulary.EntityService.UpdateStatus:input_type -> omo.msp.vocabulary.ReqEntityStatus
	16, // 19: omo.msp.vocabulary.EntityService.UpdateTags:input_type -> omo.msp.vocabulary.RequestList
	16, // 20: omo.msp.vocabulary.EntityService.UpdateSynonyms:input_type -> omo.msp.vocabulary.RequestList
	7,  // 21: omo.msp.vocabulary.EntityService.AppendProperty:input_type -> omo.msp.vocabulary.ReqEntityProperty
	15, // 22: omo.msp.vocabulary.EntityService.SubtractProperty:input_type -> omo.msp.vocabulary.RequestInfo
	8,  // 23: omo.msp.vocabulary.EntityService.UpdateProperties:input_type -> omo.msp.vocabulary.ReqEntityProperties
	5,  // 24: omo.msp.vocabulary.EntityService.AddOne:output_type -> omo.msp.vocabulary.ReplyEntityInfo
	5,  // 25: omo.msp.vocabulary.EntityService.GetOne:output_type -> omo.msp.vocabulary.ReplyEntityInfo
	5,  // 26: omo.msp.vocabulary.EntityService.GetByName:output_type -> omo.msp.vocabulary.ReplyEntityInfo
	17, // 27: omo.msp.vocabulary.EntityService.RemoveOne:output_type -> omo.msp.vocabulary.ReplyInfo
	6,  // 28: omo.msp.vocabulary.EntityService.GetAllByOwner:output_type -> omo.msp.vocabulary.ReplyEntityAll
	17, // 29: omo.msp.vocabulary.EntityService.UpdateBase:output_type -> omo.msp.vocabulary.ReplyInfo
	12, // 30: omo.msp.vocabulary.EntityService.UpdateStatus:output_type -> omo.msp.vocabulary.ReplyEntityStatus
	13, // 31: omo.msp.vocabulary.EntityService.UpdateTags:output_type -> omo.msp.vocabulary.ReplyEntityUpdate
	13, // 32: omo.msp.vocabulary.EntityService.UpdateSynonyms:output_type -> omo.msp.vocabulary.ReplyEntityUpdate
	9,  // 33: omo.msp.vocabulary.EntityService.AppendProperty:output_type -> omo.msp.vocabulary.ReplyEntityProperties
	9,  // 34: omo.msp.vocabulary.EntityService.SubtractProperty:output_type -> omo.msp.vocabulary.ReplyEntityProperties
	9,  // 35: omo.msp.vocabulary.EntityService.UpdateProperties:output_type -> omo.msp.vocabulary.ReplyEntityProperties
	24, // [24:36] is the sub-list for method output_type
	12, // [12:24] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_vocabulary_entity_proto_init() }
func file_proto_vocabulary_entity_proto_init() {
	if File_proto_vocabulary_entity_proto != nil {
		return
	}
	file_proto_vocabulary_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_vocabulary_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEntityAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEntityBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyEntityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyEntityAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEntityProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEntityProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyEntityProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEntityBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEntityStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyEntityStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_entity_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyEntityUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_vocabulary_entity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vocabulary_entity_proto_goTypes,
		DependencyIndexes: file_proto_vocabulary_entity_proto_depIdxs,
		MessageInfos:      file_proto_vocabulary_entity_proto_msgTypes,
	}.Build()
	File_proto_vocabulary_entity_proto = out.File
	file_proto_vocabulary_entity_proto_rawDesc = nil
	file_proto_vocabulary_entity_proto_goTypes = nil
	file_proto_vocabulary_entity_proto_depIdxs = nil
}
