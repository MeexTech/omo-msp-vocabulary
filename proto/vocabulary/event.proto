syntax = "proto3";

package omo.msp.vocabulary;
option go_package= "proto/vocabulary";
import "proto/vocabulary/common.proto";

service EventService {
  rpc AddOne(ReqEventAdd) returns (ReplyEventOne) {}
  rpc GetOne(RequestInfo) returns (ReplyEventOne) {}
  rpc RemoveOne(RequestInfo) returns (ReplyInfo) {}
  rpc GetList(RequestInfo) returns (ReplyEventList) {}
  rpc Update(ReqEventUpdate) returns(ReplyEventOne) {}
  rpc AppendAsset(ReqEventAsset) returns(ReplyEventAsset) {}
  rpc SubtractAsset(ReqEventAsset) returns(ReplyEventAsset) {}
  rpc AppendRelation(ReqEventRelation) returns(ReplyEventRelation) {}
  rpc SubtractRelation(ReqEventRelation) returns(ReplyEventRelation) {}
}

message EventInfo {
  uint64 id = 1;
  string uid = 2;
  int64 created = 3;
  int64 updated = 4;
  string name = 5;
  string parent = 6;
  string description = 7;
  DateInfo date = 8;
  PlaceInfo place = 9;
  string creator = 10;
  string operator = 11;
  repeated string assets = 12;
  repeated RelationshipInfo relations = 13;
}

message DateInfo {
  string uid = 1;
  string name = 2;
  string begin = 3;
  string end = 4;
}

message PlaceInfo {
  string uid = 1;
  string name = 2;
  string location = 3;
}

message RelationshipInfo {
  DirectionType direction = 1;
  string name = 2;
  string category = 3;
  string entity = 4;
  string uid = 5;
}

message ReqEventAdd {
  string name = 1;
  string parent = 2;
  string description = 3;
  DateInfo date = 4;
  PlaceInfo place = 5;
  string operator = 6;
  repeated string assets = 7;
  repeated RelationshipInfo relations = 8;
}

message ReqEventUpdate {
  string uid = 1;
  string name = 2;
  string description = 3;
  DateInfo date = 4;
  PlaceInfo place = 5;
  string operator = 6;
}

message ReqEventAsset {
  string uid = 1;
  string asset = 2;
  string operator = 3;
}

message ReplyEventAsset {
  string uid = 1;
  repeated string assets = 2;
}

message ReqEventRelation {
  string uid = 1;
  RelationshipInfo relation = 2;
  string operator = 3;
}

message ReplyEventRelation {
  string uid = 1;
  repeated RelationshipInfo relations = 2;
}

message ReplyEventOne {
  EventInfo info = 1;
  ResultStatus errorCode = 2;
}

message ReplyEventList {
  repeated EventInfo list = 1;
}

