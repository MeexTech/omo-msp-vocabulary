// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.11.2
// source: proto/vocabulary/concept.proto

package vocabulary

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ConceptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       uint32         `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Name       string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Uid        string         `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Cover      string         `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Remark     string         `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	Table      string         `protobuf:"bytes,6,opt,name=table,proto3" json:"table,omitempty"`
	Time       int64          `protobuf:"varint,7,opt,name=time,proto3" json:"time,omitempty"`
	Updated    int64          `protobuf:"varint,8,opt,name=updated,proto3" json:"updated,omitempty"`
	Created    int64          `protobuf:"varint,9,opt,name=created,proto3" json:"created,omitempty"`
	Creator    string         `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
	Operator   string         `protobuf:"bytes,11,opt,name=operator,proto3" json:"operator,omitempty"`
	Parent     string         `protobuf:"bytes,12,opt,name=parent,proto3" json:"parent,omitempty"`
	Attributes []string       `protobuf:"bytes,13,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Children   []*ConceptInfo `protobuf:"bytes,14,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ConceptInfo) Reset() {
	*x = ConceptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_concept_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConceptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConceptInfo) ProtoMessage() {}

func (x *ConceptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_concept_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConceptInfo.ProtoReflect.Descriptor instead.
func (*ConceptInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_concept_proto_rawDescGZIP(), []int{0}
}

func (x *ConceptInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ConceptInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConceptInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ConceptInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ConceptInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ConceptInfo) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ConceptInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ConceptInfo) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *ConceptInfo) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ConceptInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ConceptInfo) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *ConceptInfo) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ConceptInfo) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ConceptInfo) GetChildren() []*ConceptInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

type ReqConceptAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cover    string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Remark   string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	Table    string `protobuf:"bytes,6,opt,name=table,proto3" json:"table,omitempty"`
	Parent   string `protobuf:"bytes,7,opt,name=parent,proto3" json:"parent,omitempty"`
	Operator string `protobuf:"bytes,8,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *ReqConceptAdd) Reset() {
	*x = ReqConceptAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_concept_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqConceptAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqConceptAdd) ProtoMessage() {}

func (x *ReqConceptAdd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_concept_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqConceptAdd.ProtoReflect.Descriptor instead.
func (*ReqConceptAdd) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_concept_proto_rawDescGZIP(), []int{1}
}

func (x *ReqConceptAdd) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqConceptAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqConceptAdd) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqConceptAdd) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ReqConceptAdd) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ReqConceptAdd) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ReqConceptAdd) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type ReqConceptUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Type     uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Cover    string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Remark   string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	Operator string `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *ReqConceptUpdate) Reset() {
	*x = ReqConceptUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_concept_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqConceptUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqConceptUpdate) ProtoMessage() {}

func (x *ReqConceptUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_concept_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqConceptUpdate.ProtoReflect.Descriptor instead.
func (*ReqConceptUpdate) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_concept_proto_rawDescGZIP(), []int{2}
}

func (x *ReqConceptUpdate) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReqConceptUpdate) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqConceptUpdate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqConceptUpdate) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqConceptUpdate) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ReqConceptUpdate) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type ReplyConceptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *ConceptInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Status *ReplyStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyConceptInfo) Reset() {
	*x = ReplyConceptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_concept_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyConceptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyConceptInfo) ProtoMessage() {}

func (x *ReplyConceptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_concept_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyConceptInfo.ProtoReflect.Descriptor instead.
func (*ReplyConceptInfo) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_concept_proto_rawDescGZIP(), []int{3}
}

func (x *ReplyConceptInfo) GetInfo() *ConceptInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReplyConceptInfo) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReplyConceptList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag   string         `protobuf:"bytes,1,opt,name=flag,proto3" json:"flag,omitempty"`
	List   []*ConceptInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Status *ReplyStatus   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyConceptList) Reset() {
	*x = ReplyConceptList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_concept_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyConceptList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyConceptList) ProtoMessage() {}

func (x *ReplyConceptList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_concept_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyConceptList.ProtoReflect.Descriptor instead.
func (*ReplyConceptList) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_concept_proto_rawDescGZIP(), []int{4}
}

func (x *ReplyConceptList) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *ReplyConceptList) GetList() []*ConceptInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ReplyConceptList) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReqConceptAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Concept    string   `protobuf:"bytes,1,opt,name=concept,proto3" json:"concept,omitempty"`
	Attributes []string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Operator   string   `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *ReqConceptAttrs) Reset() {
	*x = ReqConceptAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_concept_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqConceptAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqConceptAttrs) ProtoMessage() {}

func (x *ReqConceptAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_concept_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqConceptAttrs.ProtoReflect.Descriptor instead.
func (*ReqConceptAttrs) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_concept_proto_rawDescGZIP(), []int{5}
}

func (x *ReqConceptAttrs) GetConcept() string {
	if x != nil {
		return x.Concept
	}
	return ""
}

func (x *ReqConceptAttrs) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ReqConceptAttrs) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type ReplyConceptAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Concept    string       `protobuf:"bytes,1,opt,name=concept,proto3" json:"concept,omitempty"`
	Attributes []string     `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Status     *ReplyStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReplyConceptAttrs) Reset() {
	*x = ReplyConceptAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vocabulary_concept_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyConceptAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyConceptAttrs) ProtoMessage() {}

func (x *ReplyConceptAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vocabulary_concept_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyConceptAttrs.ProtoReflect.Descriptor instead.
func (*ReplyConceptAttrs) Descriptor() ([]byte, []int) {
	return file_proto_vocabulary_concept_proto_rawDescGZIP(), []int{6}
}

func (x *ReplyConceptAttrs) GetConcept() string {
	if x != nil {
		return x.Concept
	}
	return ""
}

func (x *ReplyConceptAttrs) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ReplyConceptAttrs) GetStatus() *ReplyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_proto_vocabulary_concept_proto protoreflect.FileDescriptor

var file_proto_vocabulary_concept_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x63, 0x61,
	0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x43,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x43, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0x80, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x43,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x67, 0x0a, 0x0f, 0x52, 0x65, 0x71,
	0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65,
	0x70, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x94, 0x04, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53,
	0x0a, 0x06, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x21, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x1a, 0x24, 0x2e, 0x6f, 0x6d,
	0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x1f, 0x2e,
	0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x24,
	0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f,
	0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1d, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12,
	0x1f, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x24, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x65,
	0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x63, 0x65,
	0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x24, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x60, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x76,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x1a, 0x25, 0x2e, 0x6f, 0x6d, 0x6f, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73,
	0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x63, 0x61,
	0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_vocabulary_concept_proto_rawDescOnce sync.Once
	file_proto_vocabulary_concept_proto_rawDescData = file_proto_vocabulary_concept_proto_rawDesc
)

func file_proto_vocabulary_concept_proto_rawDescGZIP() []byte {
	file_proto_vocabulary_concept_proto_rawDescOnce.Do(func() {
		file_proto_vocabulary_concept_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_vocabulary_concept_proto_rawDescData)
	})
	return file_proto_vocabulary_concept_proto_rawDescData
}

var file_proto_vocabulary_concept_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_vocabulary_concept_proto_goTypes = []interface{}{
	(*ConceptInfo)(nil),       // 0: omo.msp.vocabulary.ConceptInfo
	(*ReqConceptAdd)(nil),     // 1: omo.msp.vocabulary.ReqConceptAdd
	(*ReqConceptUpdate)(nil),  // 2: omo.msp.vocabulary.ReqConceptUpdate
	(*ReplyConceptInfo)(nil),  // 3: omo.msp.vocabulary.ReplyConceptInfo
	(*ReplyConceptList)(nil),  // 4: omo.msp.vocabulary.ReplyConceptList
	(*ReqConceptAttrs)(nil),   // 5: omo.msp.vocabulary.ReqConceptAttrs
	(*ReplyConceptAttrs)(nil), // 6: omo.msp.vocabulary.ReplyConceptAttrs
	(*ReplyStatus)(nil),       // 7: omo.msp.vocabulary.ReplyStatus
	(*RequestInfo)(nil),       // 8: omo.msp.vocabulary.RequestInfo
	(*ReplyInfo)(nil),         // 9: omo.msp.vocabulary.ReplyInfo
}
var file_proto_vocabulary_concept_proto_depIdxs = []int32{
	0,  // 0: omo.msp.vocabulary.ConceptInfo.children:type_name -> omo.msp.vocabulary.ConceptInfo
	0,  // 1: omo.msp.vocabulary.ReplyConceptInfo.info:type_name -> omo.msp.vocabulary.ConceptInfo
	7,  // 2: omo.msp.vocabulary.ReplyConceptInfo.status:type_name -> omo.msp.vocabulary.ReplyStatus
	0,  // 3: omo.msp.vocabulary.ReplyConceptList.list:type_name -> omo.msp.vocabulary.ConceptInfo
	7,  // 4: omo.msp.vocabulary.ReplyConceptList.status:type_name -> omo.msp.vocabulary.ReplyStatus
	7,  // 5: omo.msp.vocabulary.ReplyConceptAttrs.status:type_name -> omo.msp.vocabulary.ReplyStatus
	1,  // 6: omo.msp.vocabulary.ConceptService.AddOne:input_type -> omo.msp.vocabulary.ReqConceptAdd
	8,  // 7: omo.msp.vocabulary.ConceptService.GetOne:input_type -> omo.msp.vocabulary.RequestInfo
	8,  // 8: omo.msp.vocabulary.ConceptService.RemoveOne:input_type -> omo.msp.vocabulary.RequestInfo
	8,  // 9: omo.msp.vocabulary.ConceptService.GetAll:input_type -> omo.msp.vocabulary.RequestInfo
	2,  // 10: omo.msp.vocabulary.ConceptService.Update:input_type -> omo.msp.vocabulary.ReqConceptUpdate
	5,  // 11: omo.msp.vocabulary.ConceptService.UpdateAttributes:input_type -> omo.msp.vocabulary.ReqConceptAttrs
	3,  // 12: omo.msp.vocabulary.ConceptService.AddOne:output_type -> omo.msp.vocabulary.ReplyConceptInfo
	3,  // 13: omo.msp.vocabulary.ConceptService.GetOne:output_type -> omo.msp.vocabulary.ReplyConceptInfo
	9,  // 14: omo.msp.vocabulary.ConceptService.RemoveOne:output_type -> omo.msp.vocabulary.ReplyInfo
	4,  // 15: omo.msp.vocabulary.ConceptService.GetAll:output_type -> omo.msp.vocabulary.ReplyConceptList
	3,  // 16: omo.msp.vocabulary.ConceptService.Update:output_type -> omo.msp.vocabulary.ReplyConceptInfo
	6,  // 17: omo.msp.vocabulary.ConceptService.UpdateAttributes:output_type -> omo.msp.vocabulary.ReplyConceptAttrs
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_vocabulary_concept_proto_init() }
func file_proto_vocabulary_concept_proto_init() {
	if File_proto_vocabulary_concept_proto != nil {
		return
	}
	file_proto_vocabulary_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_vocabulary_concept_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConceptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_concept_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqConceptAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_concept_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqConceptUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_concept_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyConceptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_concept_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyConceptList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_concept_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqConceptAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vocabulary_concept_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyConceptAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_vocabulary_concept_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vocabulary_concept_proto_goTypes,
		DependencyIndexes: file_proto_vocabulary_concept_proto_depIdxs,
		MessageInfos:      file_proto_vocabulary_concept_proto_msgTypes,
	}.Build()
	File_proto_vocabulary_concept_proto = out.File
	file_proto_vocabulary_concept_proto_rawDesc = nil
	file_proto_vocabulary_concept_proto_goTypes = nil
	file_proto_vocabulary_concept_proto_depIdxs = nil
}
