syntax = "proto3";

package omo.msp.vocabulary;
option go_package= "proto/vocabulary";
import "proto/vocabulary/common.proto";

service EntityService{
    rpc AddOne(ReqEntityAdd) returns (ReplyEntityOne) {}
    rpc GetOne(RequestInfo) returns (ReplyEntityOne) {}
    rpc RemoveOne(RequestInfo) returns (ReplyInfo) {}
    rpc GetListByOwner(ReqEntityBy) returns (ReplyEntityList) {}
    rpc UpdateBase(ReqEntityBase) returns (ReplyInfo) {}
    rpc UpdateStatus(ReqEntityStatus) returns (ReplyEntityStatus) {}
    rpc UpdateTags(ReqEntityUpdate) returns (ReplyEntityUpdate) {}
    rpc UpdateSynonyms(ReqEntityUpdate) returns (ReplyEntityUpdate) {}
    rpc AppendAsset(RequestInfo) returns (ReplyEntityAsset) {}
    rpc SubtractAsset(RequestInfo) returns (ReplyEntityAsset) {}
    rpc AppendEvent(ReqEntityEvent) returns (ReplyEntityEvents) {}
    rpc SubtractEvent(RequestInfo) returns (ReplyEntityEvents) {}
    rpc AppendProperty(ReqEntityProperty) returns (ReplyEntityProperties) {}
    rpc SubtractProperty(RequestInfo) returns (ReplyEntityProperties) {}
}

enum EntityStatus {
    Idle = 0;
    Pending = 1;
    Usable = 2;
    Failed = 3;
}

message EntityInfo {
    string uid = 1;
    string name = 2;
    string owner = 3;
    string cover = 4;
    string concept = 5;
    string description = 6;
    string add = 7;
    repeated string synonyms = 8;
    repeated string tags = 9;
    repeated string assets = 10;
    repeated PropertyInfo properties = 11;
    repeated EventInfo events = 12;
}

message PropertyInfo {
    string key = 1;
    repeated WordInfo words = 2;
}

message WordInfo {
    string uid = 1;
    string name = 2;
}

message DateInfo {
    string uid = 1;
    string name = 2;
    string begin = 3;
    string end = 4;
}

message PlaceInfo {
    string uid = 1;
    string name = 2;
    string location = 3;
}

message RelationshipInfo {
    DirectionType direction = 1;
    string name = 2;
    string category = 3;
    string entity = 4;
    string uid = 5;
}

message EventInfo {
    uint64 id = 1;
    string description = 2;
    DateInfo date = 3;
    PlaceInfo place = 4;
    repeated string assets = 5;
    repeated RelationshipInfo relations = 6;
}

message ReqEntityAdd {
    string creator = 1;
    string name = 2;
    string owner = 3;
    string cover = 4;
    string concept = 5;
    string description = 6;
    string add = 7;
    repeated string synonyms = 8;
    repeated string tags = 9;
}

message ReqEntityBy {
    uint32 status = 1;
    string owner = 2;
}

message ReplyEntityOne {
    EntityInfo info = 1;
    ResultStatus errorCode = 2;
}

message ReplyEntityList {
    string flag = 1;
    repeated EntityInfo list = 2;
}

message ReqEntityEvent {
     string uid = 1;
     EventInfo event = 2;
}

message ReplyEntityEvents {
    string uid = 1;
    repeated EventInfo events = 2;
    ResultStatus errorCode = 3;
}

message ReqEntityProperty {
    string uid = 1;
    PropertyInfo property = 2;
}

message ReplyEntityProperties {
    string uid = 1;
    repeated PropertyInfo properties = 2;
    ResultStatus errorCode = 3;
}

message ReqEntityBase {
    string uid = 1;
    string name = 2;
    string desc = 3;
    string add = 4;
    string concept = 5;
    string cover = 6;
}

message ReqEntityStatus {
    string uid = 1;
    EntityStatus status = 2;
}

message ReplyEntityStatus {
    string uid = 1;
    EntityStatus status = 2;
}

message ReqEntityUpdate {
    string uid = 1;
    repeated string list = 2;
    ResultStatus errorCode = 3;
}

message ReplyEntityUpdate {
    string uid = 1;
    repeated string list = 2;
    ResultStatus errorCode = 3;
}

message ReplyEntityAsset {
    string uid = 1;
    repeated string assets = 2;
    ResultStatus errorCode = 3;
}


